// <auto-generated />
using System;
using BookStoreV2.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStoreV2.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20190314011036_FixedSpellError")]
    partial class FixedSpellError
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStoreV2.Entities.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("AuthorId");

                    b.ToTable("Author","dbo");

                    b.HasData(
                        new { AuthorId = new Guid("a3bd56f7-7a3c-4628-acfc-f39157aa0186"), FirstName = "Daniel", Genre = "Action", LastName = "Silva" },
                        new { AuthorId = new Guid("69a5a3f8-766a-4b09-9953-5ef77685c7ac"), FirstName = "Andrew", Genre = "Medicine", LastName = "Weil" },
                        new { AuthorId = new Guid("f1f91ce5-b8d8-45d7-810c-1df66cbd0c1e"), FirstName = "Tom", Genre = "Thriller", LastName = "Clancy" },
                        new { AuthorId = new Guid("20bdf19c-a105-4389-94b2-24986330f914"), FirstName = "Lee", Genre = "Action", LastName = "Child" },
                        new { AuthorId = new Guid("06395987-7fe1-42bf-99ab-18185e544b3f"), FirstName = "Anthony", Genre = "Fiction", LastName = "Doeer" },
                        new { AuthorId = new Guid("067383b1-250f-4b1a-a1dc-f80414cb8ca5"), FirstName = "Clinton", Genre = "Military", LastName = "Romesha" },
                        new { AuthorId = new Guid("498df901-6252-46d2-b0e6-c6a5f4901950"), FirstName = "Marcus", Genre = "Military", LastName = "Luttrell" },
                        new { AuthorId = new Guid("23fd84d9-ae2d-4942-95f7-15bec6fdd30a"), FirstName = "Robert", Genre = "Thriller", LastName = "Ludlum" }
                    );
                });

            modelBuilder.Entity("BookStoreV2.Entities.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Book","dbo");
                });

            modelBuilder.Entity("BookStoreV2.Entities.Book", b =>
                {
                    b.HasOne("BookStoreV2.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
